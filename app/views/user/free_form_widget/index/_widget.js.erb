if(typeof(String.prototype.trim) === "undefined")
{
  String.prototype.trim = function() 
  {
    return String(this).replace(/^\s+|\s+$/g, '');
  };
}

let cachedInput = '';
let pauseTranslation = false;

<%# https://stackoverflow.com/questions/12027137/javascript-trick-for-paste-as-plain-text-in-execcommand %>
function _insertText(text) { 
  // use insertText command if supported
  if (document.queryCommandSupported('insertText')) {
    document.execCommand('insertText', false, text);
  }
  // or insert the text content at the caret's current position
  // replacing eventually selected content
  else {
    var range = document.getSelection().getRangeAt(0);
    range.deleteContents();
    var textNode = document.createTextNode(text);
    range.insertNode(textNode);
    range.selectNodeContents(textNode);
    range.collapse(false);

    var selection = window.getSelection();
    selection.removeAllRanges();
    selection.addRange(range);
  }
};

jQuery.fn.selectText = function(){
  var doc = document;
  var element = this[0];
  // console.log(this, element);
  if (doc.body.createTextRange) {
    var range = document.body.createTextRange();
    range.moveToElementText(element);
    range.select();
  } else if (window.getSelection) {
    var selection = window.getSelection();        
    var range = document.createRange();
    range.selectNodeContents(element);
    selection.removeAllRanges();
    selection.addRange(range);
   }
};

function parseTextFromContentEditable(rawHtmlText) {
  const parsedText = rawHtmlText.replace(/<div>/g,"\n").replace(/<\/div>/g,"").replace(/<br>/g,"\n");
  return parsedText;
}

function ITSTranslate(forceTranslate=false) {

  if(pauseTranslation) {
    return false;
  }

  let inputLanguage = $("#INPUT_LANGUAGE").children("option:selected").text();
  let outputLanguage = $("#OUTPUT_LANGUAGE").children("option:selected").text();
  
  // Old Way
  // let inputText = parseTextFromContentEditable($("#INPUT_AREA").html());
  // let htm = $("#INPUT_AREA").html().split("<br>");
  // var el = document.createElement('html');
  // el.innerHTML=inputText
  // str = $(el).text().replace("<span class=\"its-tran-not-found\" dir=\"\"><i class=\"icon-question mr-2\"></i>", "");
  // str = str.replace("</span>", "");
  // console.log(str);
  // let inputText = $("#INPUT_AREA").html().replace(/\u00a0/g, " ").replace(/\xA0/g,' ');
  // let inputText = $("#INPUT_AREA").html().replace(/&nbsp;/g, '\n');

  // New Way
  let inputText = $("#INPUT_AREA").html();
  let str = inputText;
  
  let sendAjaxRequest = forceTranslate || (cachedInput != inputText)
  
  // console.log("forceTranslate: ", forceTranslate);
  // console.log("cachedInput: ", cachedInput);
  // console.log("inputText: ", inputText);
  // console.log("sendAjaxRequest: ", sendAjaxRequest);

  if(sendAjaxRequest){
    let ajaxData = {text: str, input_language: inputLanguage, output_language: outputLanguage };
    //alert(ajaxData);
    $.ajax({
      url: '/user/translate.js',
      type: 'POST',
      data: ajaxData
    });
    cachedInput = inputText;

  }
  
}

function requestForTranslation(phrase) {
  let inputLanguage = $("#INPUT_LANGUAGE").children("option:selected").text();
  let outputLanguage = $("#OUTPUT_LANGUAGE").children("option:selected").text();
  let ajaxData = {phrase: phrase, input_language: inputLanguage, output_language: outputLanguage };
  $.ajax({
    url: '/user/translation_request.js',
    type: 'GET',
    data: ajaxData
  });
}

function swapLanguages(){

  // Get Input and Output Language from the dropdown
  let inputLanguage = $("#INPUT_LANGUAGE").children("option:selected").val();
  let outputLanguage = $("#OUTPUT_LANGUAGE").children("option:selected").val();
  
  // Get Output Text (right side)
  let outText = $("#OUTPUT_AREA").html();
  outText = outText.replace(/<\/?span[^>]*>/g,"");
  outText = outText.replace(/<\/?i[^>]*>/g,"");
  
  // Swapping Input to Output
  $("#INPUT_AREA").html(outText);
  $("#OUTPUT_AREA").html("");

  pauseTranslation = true;
  $("#INPUT_LANGUAGE").val(outputLanguage).change();
  $("#OUTPUT_LANGUAGE").val(inputLanguage).change();
  pauseTranslation = false;
  ITSTranslate(true);
}

function countErrorText(){
  let outText = $("#OUTPUT_AREA").html();
  outText = outText.match(/<span[^>]*>/g);
  if( outText!==null && outText.length >=4){
    notifyError("Input Text", "There are too many errors. Please check input value.");
  }
  //alert(outText.length);
}

$(document).off('blur', "#INPUT_AREA");
$(document).on('keydown', '#INPUT_AREA', function (e) {

  <%# 
    Tab => 9
    Enter => 13
    Pause / Break => 19
    (Space) => 32
    Numbers => 97 to 105
    Delete => 46
    []{} => 219 to 222
    ( => 48 
    ) => 57
    Forward Slash \ => 191
    
    ; => 56 (firefox) 186 (other browsers)
    - => 173 (firefox) 189 (other browsers)
    Period => 190
    , => 188

    Checkout this link for keycodes
    https://css-tricks.com/snippets/javascript/javascript-keycodes/ 

  %>
 // alert(e.key);
  // console.log(e.key + " - " + e.which);
  if (
    [9, 13, 19, 32,46, 48, 56, 57, 186, 173, 188, 189, 190, 191, 192].includes(e.which) ||
    (e.which >= 97 && e.which <= 105) ||
    (e.which >= 219 && e.which <= 222)
    ) {
    // console.log('Changed ( ' + e.key + " - " + e.which + " )");

  pauseTranslation = false;
    ITSTranslate();
    countErrorText();
  }
});
var timeout = null;

/// If user stops typing up to 2 sec fire event to translation.
$('#INPUT_AREA').keyup(function(e) {
  clearTimeout(timeout);
  let key=e.which;
  timeout = setTimeout(function() {
    if (![9, 13, 19, 32, 48, 56, 57, 186, 173, 188, 189, 190, 191, 192].includes(e.which)) 
    {
      pauseTranslation = false;
      ITSTranslate();
    }
     
  },1000);
});

$(document).off('focusout', "#INPUT_AREA");
$(document).on('focusout', '#INPUT_AREA', function (e) {
  pauseTranslation = false;
  ITSTranslate();
});

$(document).off('paste', "#INPUT_AREA");
$(document).on('paste', '#INPUT_AREA', function (e) {
  e.preventDefault();
  var text = e.originalEvent.clipboardData ? e.originalEvent.clipboardData.getData('text/plain') : window.clipboardData.getData('Text');
  _insertText(text);
  ITSTranslate(true);
});

// Widget Controls
// ---------------

/// On input language dropdown change
$("#INPUT_LANGUAGE").on('change', function(){
  if($("#INPUT_LANGUAGE").children("option:selected").val()=='ARABIC'){
    $('#INPUT_AREA').attr('style','direction: rtl;text-align: right;cursor: text;');
  }else{
    $('#INPUT_AREA').attr('style','direction: ltr;text-align: left;cursor: text;');
  }
  ITSTranslate(true);
});

/// On output language dropdown change
$("#OUTPUT_LANGUAGE").on('change', function(){
  if($("#OUTPUT_LANGUAGE").children("option:selected").val()=='ARABIC'){
    $('#OUTPUT_AREA').attr('style','direction: rtl;text-align: right;');
  } else {
    $('#OUTPUT_AREA').attr('style','direction: ltr;text-align: left;');
  }
  ITSTranslate(true);
});

// On input language change of text
$("#INPUT_AREA").on('keydown', function(event) {
   
  let key = event.key; // const {key} = event; ES6+
  if (key === "Backspace" || key === "Delete"|| event.keyCode==46) {
     if(key === "Delete"|| event.keyCode==46){
     let outText = $("#INPUT_AREA").html();
     
    let finalStr= outText.replace(getSelectionHtml(),"");
    
    $("#INPUT_AREA").html($.parseHTML(finalStr.trim()));
    pauseTranslation = false;
    ITSTranslate( true);
   }
    
  }
});

function getSelectionHtml() {
    var html = "";
    if (typeof window.getSelection != "undefined") {
        var sel = window.getSelection();
        if (sel.rangeCount) {
            var container = document.createElement("div");
            for (var i = 0, len = sel.rangeCount; i < len; ++i) {
                container.appendChild(sel.getRangeAt(i).cloneContents());
            }
            html = container.innerHTML;
        }
    } else if (typeof document.selection != "undefined") {
        if (document.selection.type == "Text") {
            html = document.selection.createRange().htmlText;
        }
    }
    return html;
}

// OnClick for trans-not-found span elements coming inside output translation contenteditable div
$(document).off('click', ".its-tran-not-found");
$(document).on('click', '.its-tran-not-found', function (e) {
  let clickedPhrase = $(this).text();
  // console.log("clickedPhrase: ", clickedPhrase);
  requestForTranslation(clickedPhrase);
});

// OnClick Event for swap button
$(".swap").click(function(){
  swapLanguages();
});

// OnClick Event for the translate button
$("#translate").click(function(){
  pauseTranslation = false;
  ITSTranslate(true);
});

// OnCick Event for Input Clear Button 
$(document).off('click', "#INPUT_CLEAR_ACTION");
$(document).on('click', '#INPUT_CLEAR_ACTION', function (e) {
  $("#INPUT_AREA").html("");
  $("#OUTPUT_AREA").html("");
});

// OnCick Event for Input Paste Button 
$(document).off('click', "#INPUT_COPY_ACTION");
$(document).on('click', '#INPUT_COPY_ACTION', function (e) {
  let inputText = parseTextFromContentEditable($("#INPUT_AREA").html());
  $("#INPUT_AREA").selectText();
  document.execCommand('copy');
});

// OnCick Event for Output Paste Button 
$(document).off('click', "#OUTPUT_COPY_ACTION");
$(document).on('click', '#OUTPUT_COPY_ACTION', function (e) {
  let outputText = parseTextFromContentEditable($("#OUTPUT_AREA").html());
  $("#OUTPUT_AREA").selectText();
  document.execCommand('copy');
});

// Old Methods

// $(document).off('click', "#INPUT_CUT_ACTION");
// $(document).on('click', '#INPUT_CUT_ACTION', function (e) {
//   let inputText = parseTextFromContentEditable($("#INPUT_AREA").html());
//   // $("#INPUT_AREA").selectText();
//   document.execCommand('copy');
//   $("#INPUT_AREA").html("");
//   $("#OUTPUT_AREA").html("");
//   // navigator.clipboard.write([inputText]).then(function() {
//   //   console.log("Copied to clipboard and cleared the input successfully!");
//   //   $("#INPUT_AREA").html("");
//   //   $("#OUTPUT_AREA").html("");
//   // }, function() {
//   //   console.error("Unable to write to clipboard.");
//   // });
// });
//
// $(document).off('click', "#INPUT_PASTE_ACTION");
// $(document).on('click', '#INPUT_PASTE_ACTION', function (e) {
//   navigator.clipboard.readText().then(function(data) {
//     console.log("Pasted from clipboard:", data);
//     // $("#INPUT_AREA").html(data);
//     document.execCommand('copy');
//     ITSTranslate();
//   });
// });
//


